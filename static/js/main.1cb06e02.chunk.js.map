{"version":3,"sources":["App.js","index.js"],"names":["App","state","changeHandle","e","setState","target","name","value","className","onSubmit","preventDefault","props","dispatchRegisterFlight","type","onChange","this","scope","colSpan","flights","map","f","i","key","fn","des","dep","date","Component","logger","createLogger","Actions","fl","flight","store","createStore","action","flightInfo","applyMiddleware","flit","dispatch","console","log","getState","Root","document","getElementById","render","ReactDOM","subscribe"],"mappings":"8PAsFgBA,EApFhB,2MACEC,MAAQ,GADV,EAEEC,aAAe,SAAAC,GACb,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,SAH7C,wEAKc,IAAD,OAER,OACC,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACf,0BAAMA,UAAU,4DAA4DC,SAAU,SAAAN,GAClFA,EAAEO,iBACF,EAAKC,MAAMC,uBAAuB,EAAKX,SAE3C,wBAAIO,UAAU,0BAAd,eACE,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,UACb,kDACA,2BAAOK,KAAK,OAAOP,KAAK,KAAKE,UAAU,eAAeM,SAAUC,KAAKb,gBAGvE,yBAAKM,UAAU,UACb,gDACA,2BAAOK,KAAK,OAAOP,KAAK,MAAME,UAAU,eAAcM,SAAUC,KAAKb,gBAGvE,yBAAKM,UAAU,UACb,8CACA,2BAAOK,KAAK,OAAOP,KAAK,MAAME,UAAU,eAAeM,SAAUC,KAAKb,gBAGxE,yBAAKM,UAAU,UACb,yCACA,2BAAOK,KAAK,OAAOP,KAAK,OAAOE,UAAU,eAAeM,SAAUC,KAAKb,iBAK3E,4BAAQW,KAAK,SAASL,UAAU,2CAAhC,aAIF,2BAAOA,UAAU,mFACf,2BAAOA,UAAU,sBACjB,4BACK,wBAAIQ,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,OAAV,gBACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,MAAMC,QAAQ,KAAxB,UAID,+BACCF,KAAKJ,MAAMO,QAAQC,KAAI,SAACC,EAAEC,GAAH,OACxB,wBAAIC,IAAKD,GACT,wBAAIb,UAAU,OACTa,EAAE,EAAE,KAET,4BACKD,EAAEG,IAEP,4BACGH,EAAEI,KAEL,4BACKJ,EAAEK,KAEP,4BACKL,EAAEM,MAEP,4BACI,4BAAQlB,UAAU,iBAAiBF,KAAK,OAAxC,kBAxElB,GAAyBqB,a,eCMnBC,EAASC,yBAETC,EACQ,kBAkBd,IAAMC,EAAK,CACPC,OAAO,IAsBX,IAAMC,EAAQC,aAlBd,WAAsC,IAArBjC,EAAoB,uDAAZ8B,EAAII,EAAQ,uCACjC,OAAQA,EAAOtB,MACf,IAAK,kBACD,MAAgB,CAChBmB,OAAO,GAAD,mBAAM/B,EAAM+B,QAAZ,CAAmB,CACrBT,GAAIY,EAAOC,WAAWb,GACtBC,IAAKW,EAAOC,WAAWZ,IACvBC,IAAKU,EAAOC,WAAWX,IACvBC,KAAMS,EAAOC,WAAWV,SAIhC,QACI,OAAOzB,KAKmBoC,YAAgBT,IAG5ChB,EAAyB,SAAA0B,GAvC/B,IAAwBN,EAwCpBC,EAAMM,UAxCcP,EAwCUM,EAvCvB,CACPzB,KAAMiB,EACNM,WAAW,eAKJJ,MAiCPQ,QAAQC,IAAIR,EAAMS,aAGhBC,EAAOC,SAASC,eAAe,QAC/BC,EAAS,WACX,IAAI5B,EAAUe,EAAMS,WAAWV,OAC/Be,IAASD,OACT,kBAAC,EAAD,CAAKlC,uBAAwBA,EAAwBM,QAASA,IAC9DyB,IAIJG,IAEAb,EAAMe,UAAUF,K","file":"static/js/main.1cb06e02.chunk.js","sourcesContent":["import React, { Component } from 'react'\n \nexport class App extends Component {\n  state = {};\n  changeHandle = e => {\n    this.setState({[e.target.name]: e.target.value}); \n   }\n    render() {\n    \n     return (\n      <div className='container'>\n        <div className='row'>\n        <form className=' col-12 col-md-12 col-sm-12 bg-dark rounded-lg text-white' onSubmit={e => {\n            e.preventDefault();\n            this.props.dispatchRegisterFlight(this.state);\n          }}>\n        <h1 className='text-center text-white'>Flight Form</h1>\n          <div className=\"row justify-content-sm-center\">\n            <div className=\"col-12\">\n              <label>Flight Number: </label>\n              <input type=\"text\" name=\"fn\" className=\"form-control\" onChange={this.changeHandle} />\n            </div>\n\n            <div className=\"col-12\">\n              <label>Destination: </label>\n              <input type=\"text\" name=\"des\" className=\"form-control\"onChange={this.changeHandle} />\n            </div>\n\n            <div className=\"col-12\">\n              <label>Departure: </label>\n              <input type=\"text\" name=\"dep\" className=\"form-control\" onChange={this.changeHandle}/>\n            </div>\n\n            <div className='col-12'>\n              <label>Date: </label>\n              <input type=\"date\" name=\"date\" className=\"form-control\" onChange={this.changeHandle}/>\n            </div>\n\n          </div>\n          \n          <button type=\"submit\" className=\"form-control mt-3 btn btn-danger  mb-4 \" > SUBMIT </button>\n        </form>\n\n\n        <table className='table table-bordered  col-12 col-md-12 col-sm-12 text-center bg-dark text-white'>\n          <thead className='class=\"thead-dark\"'>\n          <tr>\n               <th scope=\"col\">#</th>\n               <th scope=\"col\">Flight Number:</th>\n               <th scope=\"col\">Destination:</th>\n               <th scope=\"col\">Departure:</th>\n               <th scope=\"col\" colSpan=\"2\">Date</th>\n           </tr>\n          </thead>\n    \n              <tbody>\n              {this.props.flights.map((f,i)=>(\n              <tr key={i}>\n              <td className='num'>\n                  {i+1+\".\"}\n              </td>\n              <td>\n                  {f.fn}\n              </td>\n              <td>\n                {f.des}\n              </td>\n              <td>\n                  {f.dep}\n              </td>\n              <td>\n                  {f.date}\n              </td>\n              <td>\n                  <button className='btn btn-danger' name='del'>X</button>\n              </td>\n          </tr>\n          ))}\n          </tbody>\n   </table>\n\n      </div>\n      </div>\n    )\n  }\n}\n export default App \n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore} from \"redux\";\nimport { applyMiddleware} from \"redux\";\n\nimport {createLogger} from 'redux-logger';\n\nconst logger = createLogger();\n\nconst Actions = {\n    register: \"REGISTER_FLIGHT\"\n    \n};\n\n//create Action\nfunction registerFlight(flight) {\n    return {\n    type: Actions.register,\n    flightInfo: {\n        /* fn: flight.fn,\n        des: flight.des,\n        dep: flight.dep,\n        date: flight.date */\n        ...flight\n    }\n    };\n}\n\nconst fl = {\n    flight:[]\n};\n\n//create reducer\nfunction reducer(state = fl, action) {\n    switch (action.type) {\n    case \"REGISTER_FLIGHT\":\n        return (state = {\n        flight: [...state.flight,{\n            fn: action.flightInfo.fn,\n            des: action.flightInfo.des,\n            dep: action.flightInfo.dep,\n            date: action.flightInfo.date\n        }]\n        });\n\n    default:\n        return state;\n    }\n}\n\n//create store\nconst store = createStore(reducer,applyMiddleware(logger));\n\n//method for sending to component for dispatching action register_flight\nconst dispatchRegisterFlight = flit => {\n    store.dispatch(registerFlight(flit));\n    console.log(store.getState());\n};\n\nconst Root = document.getElementById(\"root\");\nconst render = () => {\n    var flights = store.getState().flight\n    ReactDOM.render(\n    <App dispatchRegisterFlight={dispatchRegisterFlight} flights={flights}/>,\n    Root\n    );\n};\n\nrender();\n//subscribe render method with store container\nstore.subscribe(render);\n"],"sourceRoot":""}